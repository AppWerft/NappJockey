/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package dk.napp.jockey;

import java.util.HashMap;

import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;
import android.os.Handler;


@Kroll.proxy(name="WebView", creatableInModule=DkNappJockeyModule.class)
public class DkNappJockeyWebViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String TAG = "DkNappJockeyWebViewProxy";
	private DkNappJockeyWebView webView;

	// Constructor
	public DkNappJockeyWebViewProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity arg0) {
		initView();
		return webView;
	}

	private void initView() {
		if (webView == null) {
			webView = new DkNappJockeyWebView(this);
		}
	}

	// Methods
	@Kroll.method
	public void sendJockeyData(String eventName, Object data )
	{
		webView.sendJockeyEvent(eventName, data);
	}
	
	// we use onHasListenersChanged to hook into the titanium SDK for adding an eventlistener.
	// we cannot just override addEventListener
	// onHasListenersChanged is called in KrollProxy
	// src: https://github.com/appcelerator/titanium_mobile/blob/master/android/titanium/src/java/org/appcelerator/kroll/KrollProxy.java#L900
	@Override
	public void onHasListenersChanged(final String eventName, boolean hasListeners)
	{
		// We only want too add a listener to Jockey - when JS calls addEventListener
		// This is done when hasListeners is true
		if(hasListeners){
			if (webView != null) {
				webView.setJockeyListener(eventName);
			} else {  
				// Wait 500 ms 
				new Handler().postDelayed(new Runnable()
				{
					@Override
					public void run() {
					if (webView != null)
							webView.setJockeyListener(eventName);
					}
				}, 500);
			}
		}
		
		super.onHasListenersChanged(eventName, hasListeners);
	}
	
}